<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAWsAAAE4CAYAAACdXNIhAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAABiLSURBVHhe7d27les6lsZxpjNOO+MxjA5C5jidQIXAts6a
        IGq1pwCOPfZxFMJ1bgacvfGgABB86I3N+v/u2uuURBIESfEjxJLqdiMAoHmENQAY0P3999/uh/+jKIqi
        mq0prP+761zVZqIoiqI+W4Q1RVGUgSKsKYqiDFQ1rP/zux//8fsiP1/Gf/3qxn/+KRf0z3dfp/Hf2fOP
        l667+9K2n9O+a+/XMP6nMs1C1fv/qv2/dLwpivp0VcP639/xhH1/WE/153TYsL6lT4Q1RVFaG2F9Hv/5
        1Y//+mu+4MvLSFjrvvLvQurTa/V4WL+qdoT1k44LRVG3VR7W//W/ciLGWxBl+RPUhUfx3LXBeLJryMd5
        KmH/1zD+Y5ouVQujaihUwkTnK5bXAL32cd5+Nv3uIAzbWFm+XH/sb77v0sr30Vr/1/e/Vhx1r82zVHH/
        pm3Mj5/v34cu4hT1Q6systYTNZyILlQXTvaVME1PZHdip4HmltsYvWndGdZufd/naXo5Mi2nz/q3p8LF
        pjai3jMSXptnq/9Tre3/cvndgX0N6biPl/aPb3fHcaQo6ilVCWsdMYaTuwjCrJ4Upot1T/suRPMRXx52
        lds6lWXWaiuk/PT19vI+JbXZ/6Rq+6d6cfXvAPaF6vbxy2rlokVR1HMrC+v/+ac8ISdfrWYn5D1hWpu+
        VPe0XwmrLOxCuMy3b29Y+/XrMmvbEAPdVSXo1sN6pf9p1fbP3n22WFvHr6hpf5brpCjq2TUfWSeB4YJi
        aRR8T5iG6btGYve07/q+MjKtTL+rQkhtb4fvb7kP18P6gZF1dZ+9aGTt1rW3XYqiHq15WCcn5/PDOrS5
        JzBX2p/6FELz2r4PpilEQ6Bcp9fD877y66oGWVLV2z6uX7V9sNX/pKr7J/QpWV/1nnPcb3ccPy3X5jMu
        ehRF7a7VsNaTMh89hrBzJ3pa8cTdd7L7wE6Wn6ZvtS81BY2WhE3Zfjpdn5+tv7KOon+3VLmPfJBtt53P
        t7B9s/7v2D8xsGPV1v9IWOvj2XIURb26Kr9grM9IURRFfa4Ia4qiKANFWFMURRmoKaxrEymKoqg2agpr
        AEC7CGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsA
        MICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgAD
        CGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCGsAMICwBgADCOtVZ9lD
        p/BzdBnHvnf/AMC7LIT1eTx13dh1/TiYDKXLOPTa/5PG7Z00qDtfaSOXITxPYAN4n5eE9fmky3bj6f6k
        fNATwlq2YTmQQ5D3EtwA8AYvuQ3y+bB+0Pnkw3jtShXnsbqNAEyZhXUMWl/lyDqMuE9DGLn6iqF8Gfpk
        2bR2jtAlADtp7Br2cYScL5/3MR89530oR9a+vdM5vnPQqvTNjarLe9UlaVmWZ3QN4B3uC+tZ+VB8SljL
        /L3MHNuKga3PKX0+HbG7/kpgzpp3bdXDOu1PXP4qhPCetwW7Qh0AHrd4G8SH9nJY+yxbH/nuybtMErAu
        rF0I52E9o8vcGNZZv8LyVzJxb1hLH2VhbRYAXuq+sJ7C8QNhfRnGXvuQFmEN4OCMhbVffzbKDmGbdVM9
        GtbZcwtkO7kNAuAdirBeuicdw3hfWMf7zfPlN9wc1mV/EneHtdgVwiHUb74iAcDtXhLW83aeFdblhUDa
        HXzY5v0pK65/Z1jLc7IQH90D0IzF2yA/m4S0hLqkuPtxLoyqy5AHgBchrBeFQJ6NnmOQc68awPsQ1mvc
        3wEpQtk9xydAALwXYQ0ABhDWAGAAYQ0ABhDWAGDASlgnn4bY9SFpAMCrLIR1/HgaYQ0ALVgIa770AQAt
        WQ9rRtQA0ATCGgAMqIf1nj9kBAB4myKsk0+A8JVqAGgGYQ0ABnAbBAAM4BeMAGAAYQ0ABqyHNV+KAYAm
        LIS1jKj5ujkANGMhrFXyyRDCGgA+aiWsAQCtIKwBwADCGgAMIKwBwADCGgAMaDSsz+Op68au6819EOUy
        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
</value>
  </data>
</root>