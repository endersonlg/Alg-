<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XHbSJwAAAABJRU5ErkJggg==
</value>
  </data>
</root>